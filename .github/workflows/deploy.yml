name: Deploy to Server (transyainsa)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Known hosts (add server fingerprint)
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      # Sincroniza archivos al servidor (no sube .git, node_modules, vendor, ni tu .env)
      - name: Rsync project to server
        run: |
          RSYNC_EXCLUDES="\
            --exclude='node_modules' \
            --exclude='vendor' \
            --exclude='storage/logs/*' \
            --exclude='storage/framework/cache/*' \
            --exclude='storage/framework/sessions/*' \
            --exclude='storage/framework/views/*' \
          "
          rsync -az --delete $RSYNC_EXCLUDES ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.DEPLOY_PATH }}

      - name: Pull & deploy on server (git strategy)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          script_stop: true
          script: |
            set -e
            cd ${{ secrets.DEPLOY_PATH }}
            # Primera vez: git init + set remote si hace falta
            if [ ! -d .git ]; then
              git init
              git remote add origin git@github.com:bryan2709/transyainsa.git || true
              git fetch origin main
              git checkout -B main origin/main
            else
              git fetch origin main
              git reset --hard origin/main
            fi

            # (igual que antes)
            composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev
            php artisan config:cache && php artisan route:cache && php artisan view:cache
            npm ci && npm run build || true
            chown -R www-data:www-data storage bootstrap/cache || true
            chmod -R ug+rw storage bootstrap/cache || true
            systemctl reload apache2 2>/dev/null || systemctl reload nginx 2>/dev/null || true

