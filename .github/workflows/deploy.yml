name: Deploy to Server (transyainsa - git pull)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Solo para usar la clave SSH y entrar al servidor
      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy via git pull on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT || '22' }}
          script_stop: true
          script: |
            set -euo pipefail

            REPO_SSH="git@github.com:bryan2709/transyainsa.git"
            APP_DIR="${{ secrets.DEPLOY_PATH }}"

            # Prepara SSH del *servidor* para hablar con GitHub sin prompt
            mkdir -p ~/.ssh
            chmod 700 ~/.ssh
            ssh-keyscan -H github.com >> ~/.ssh/known_hosts

            # Asegura carpeta destino
            mkdir -p "$APP_DIR"
            cd "$APP_DIR"

            # Si no hay repo, inicializa y enlaza
            if [ ! -d .git ]; then
              git init
              git remote add origin "$REPO_SSH" || true
              git fetch origin main
              git checkout -B main origin/main
            else
              git fetch origin main
              # OpciÃ³n segura para despliegues reproducibles
              git reset --hard origin/main
              git clean -fd
            fi

            # Dependencias PHP
            if ! command -v composer >/dev/null 2>&1; then
              php -r "copy('https://getcomposer.org/installer','composer-setup.php');"
              php composer-setup.php --install-dir=/usr/local/bin --filename=composer
              rm -f composer-setup.php
            fi
            composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev

            # Laravel: caches (migraciones si corresponde)
            php artisan config:cache || true
            php artisan route:cache || true
            php artisan view:cache || true

            # Frontend (opcional: solo si existe package.json)
            if [ -f package.json ]; then
              if ! command -v npm >/dev/null 2>&1; then
                curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
                apt-get update && apt-get install -y nodejs
              fi
              npm ci
              npm run build
            fi

            # Permisos Laravel
            chown -R www-data:www-data storage bootstrap/cache || true
            chmod -R ug+rw storage bootstrap/cache || true

            # Reload web server
            systemctl reload apache2 2>/dev/null || systemctl reload nginx 2>/dev/null || true
